{"version":3,"sources":["template.js","request.js","index.js"],"names":["$app","document","querySelector","innerHTML","_default","exports","default","asyncRequestWeather","city","fetchDataFromAPI","urlAPI","actions","fetch","then","response","json","data","concat","geo","GeoObjectCollection","featureMember","citySearch","GeoObject","name","pos","split","reverse","map","item","Number","toFixed","sys","country","Math","floor","main","temp","require","_template","_interopRequireDefault","_request","obj","__esModule","$search","$searchInput","openSearchCities","classList","add","closeSearchCities","remove","checkClassSearchCities","contains","axisY","window","addEventListener","event","screenY","setInterval","value"],"mappings":";;;AAiBmB,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAjBnB,IAAMA,EAAOC,SAASC,cAAc,QAEpCF,EAAKG,UAaJ,4WAAC,IAAAC,EAEaJ,EAAIK,QAAAC,QAAAF;;ACYnB,aA7Be,SAASG,EAAoBC,GAqB1C,SAASC,EAAiBC,EAAQC,GAChCC,MAAMF,GACHG,KAAK,SAACC,GAAQ,OAAKA,EAASC,SAC5BF,KAAK,SAACG,GAEL,OADAL,EAAQK,GACDA,IAxBbP,EADgBQ,2FAAAA,OAA8FT,EAAkB,gBACjG,SAACQ,GAC9B,IAAME,EAAMF,EAAKF,SAASK,oBAAoBC,cAAc,GACtDC,EAAaH,EAAII,UAAUC,KAC3BC,EAAMN,EAAII,UAAiB,MAAEE,IAChCC,MAAM,KACNC,UACAC,IAAI,SAACC,GACJ,OAAOC,OAAOD,GAAME,QAAQ,KAIhCrB,EADiBQ,uDAAAA,OAA0DO,EAAI,GAAEP,SAAAA,OAAQO,EAAI,GAA2C,2CACxG,SAACR,GAC/Bf,SAASC,cAAc,mBAAmBC,UACxCkB,EAAa,MAAQL,EAAKe,IAAIC,QAChC/B,SAASC,cAAc,oBAAoBC,UACzC8B,KAAKC,MAAMlB,EAAKmB,KAAKC,KAAO,OAAS,SAY7C,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA;;ACK+B,aAlC/BC,QAAA,sBACA,IAAAC,EAAAC,EAAAF,QAAA,eACAG,EAAAD,EAAAF,QAAA,cAA4C,SAAAE,EAAAE,GAAAA,OAAAA,GAAAA,EAAAC,WAAAD,EAAAnC,CAAAA,QAAAmC,GAE5C,IAAME,EAAU1C,SAASC,cAAc,WACjC0C,EAAeD,EAAQzC,cAAc,kBAC3C,SAAS2C,IACPF,EAAQG,UAAUC,IAAI,eAExB,SAASC,IACPL,EAAQG,UAAUG,OAAO,eAE3B,SAASC,IACP,OAAOP,EAAQG,UAAUK,SAAS,eAGpC,IAAIC,EAAQ,EACZC,OAAOC,iBAAiB,YAAa,SAACC,GACpCH,EAAQG,EAAMC,UAEhBC,YAAY,WACNL,EAAQ,MACLF,KACHL,KAGAO,GAAS,KACPF,MACFF,KACA,EAAAzC,EAAmB,SAACqC,EAAac,SAGpC,MAEH,EAAAnD,EAAmB,SAAC","file":"src.ba3ca317.js","sourceRoot":"..\\src","sourcesContent":["const $app = document.querySelector(\".app\");\r\n\r\n$app.innerHTML = /*html*/ `\r\n  <div class=\"search\">\r\n    <input class=\"search__input\" type=\"text\" placeholder=\"Введите город...\">\r\n  </div>\r\n  <div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"window\">\r\n        <div class=\"window__header\"></div>\r\n        <div class=\"window__content\"></div>\r\n        <div class=\"window__footer\"></div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n`;\r\n\r\nexport default $app;\r\n","export default function asyncRequestWeather(city) {\r\n  let yandexUrlAPI = `https://geocode-maps.yandex.ru/1.x/?apikey=b12fdac4-d030-4c39-8b70-92f922163c9a&geocode=${city}&format=json`;\r\n  fetchDataFromAPI(yandexUrlAPI, (data) => {\r\n    const geo = data.response.GeoObjectCollection.featureMember[0];\r\n    const citySearch = geo.GeoObject.name;\r\n    const pos = geo.GeoObject[\"Point\"].pos\r\n      .split(\" \")\r\n      .reverse()\r\n      .map((item) => {\r\n        return Number(item).toFixed(2);\r\n      });\r\n\r\n    let weatherUrlAPI = `https://api.openweathermap.org/data/2.5/weather?lat=${pos[0]}&lon=${pos[1]}&appid=9cf319515242ae7efb08069d26c3c945`;\r\n    fetchDataFromAPI(weatherUrlAPI, (data) => {\r\n      document.querySelector(\".window__header\").innerHTML =\r\n        citySearch + \" | \" + data.sys.country;\r\n      document.querySelector(\".window__content\").innerHTML =\r\n        Math.floor(data.main.temp - 273.4) + \"°C\";\r\n    });\r\n  });\r\n\r\n  function fetchDataFromAPI(urlAPI, actions) {\r\n    fetch(urlAPI)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        actions(data);\r\n        return data;\r\n      });\r\n  }\r\n}\r\n","import \"./styles/main.scss\";\r\nimport $app from \"./template\";\r\nimport asyncRequestWeather from \"./request\";\r\n\r\nconst $search = document.querySelector(\".search\");\r\nconst $searchInput = $search.querySelector(\".search__input\");\r\nfunction openSearchCities() {\r\n  $search.classList.add(\"show-search\");\r\n}\r\nfunction closeSearchCities() {\r\n  $search.classList.remove(\"show-search\");\r\n}\r\nfunction checkClassSearchCities() {\r\n  return $search.classList.contains(\"show-search\");\r\n}\r\n\r\nlet axisY = 0;\r\nwindow.addEventListener(\"mousemove\", (event) => {\r\n  axisY = event.screenY;\r\n});\r\nsetInterval(() => {\r\n  if (axisY < 300) {\r\n    if (!checkClassSearchCities()) {\r\n      openSearchCities();\r\n    }\r\n  }\r\n  if (axisY >= 300) {\r\n    if (checkClassSearchCities()) {\r\n      closeSearchCities();\r\n      asyncRequestWeather($searchInput.value);\r\n    }\r\n  }\r\n}, 300);\r\n\r\nasyncRequestWeather('Мурманск');\r\n"]}